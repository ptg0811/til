프로그래밍을 배우는 기본자세

- 마음껏 실험해라

- 에러가 나도 무서워하지 말자. 에러가 나지 않는 개발자는 없다.

- 모르면 물어봐라. slack 채널, googling

- 맨 처음 프로그래밍 학습하는 사람을 위한 팁: http://bit.ly/learn-programming-tip

- 배웠으면 써먹자!

- 질문할 때 필요한 세가지

목적 - 내가 하려던 작업
에러 정보 (에러 메시지, 에러가 발생한 화면)
내가 어떤 작업을 시도해봤는지, 참고한 자료가 있다면 무엇인지
Git의 쓰임새

1. 버전관리,히스토리관리

2. 작업 단위 나누기

3. 협업프로젝트

 

Github의 쓰임새

- Git의 원격저장소 + 커뮤니티 기능

1. 인터넷으로 연결되는 원격저장소

2.개발자들의 커뮤니티: 다른 사람 공개 프로젝트, 관심있는 기술 뉴스

 

Sourcetree는?

- Git을 쉽게 사용할 수 있는 도구

 

버전관리와 commit의 개념탑재

- 버전관리: 누가,언제,현재 프로젝트의 내용이 어떤지 정보를 남긴다는 것

- commit: 현재 프로젝트의 상태를 저장한다. 따라서 git이 자동으로 어떤 부분이 바뀌었는지 알려준다. 누가, 언제, 어떤 부분을 바꾸었는지 확인해볼수 있다. '파일의 어떤 부분이 변경되었는지를 저장하는것'이 아니다.

 

프로젝트 만들기

- 프로그래밍할 때 파일명은 영어로, 단어를 연결할때는 -나 _를 사용, 컴퓨터가 다른 문자가 섞이면 잘 인식을 못할때가 종종 있음

- 내용을 제대로 나타내주는 이름

 

! 커밋 메세지를 잘 적어줘야 한다. 회사별로 쓰는 방법 있기도 함.

! 프로그래밍은 암기력 싸움이 아니에요. 문제해결이에요. 어떤 정보를 활용하고, 어떤 전략을 짜는지가 중요합니다.

 

✓정리해보기

1. 버전관리를 한다는건 어떤의미일까?

나의 정리: 이전 작업한 내역과 현재 작업한 내역을 비교하는 것을 말합니다.

수업자료 정리: 프로젝트 상태가 변경되는 정보를 알고 있다는 것입니다. Git 은 commit 을 사용해서 버전이 달라지는 것을 관리합니다. 

2. 작업내역 단위인 commit에는 어떤 정보가 포함되어 있어야 잘 버전 관리를 할 수 있을까?

나의 정리: 작업내용, 작업자, 작업일시 등

수업자료 정리: 누가(author), 언제 commit 했는지의 정보와 프로젝트 변경 내용, 그리고 commit 을 편하게 관리하기 위한 commit 아이디! commit 아이디는 사용자 아이디처럼 commit 에 부여된 유일한 값!

3. 지금까지 우리가 실습은 어떤 순서로 했었지?

나의 정리: 파일 수정, 추가, 스테이징, 커밋메세지, 커밋

수업자료 정리: 지금까지 우리가 한 작업은 'git 초기화하기(initialize) - add(staging) - commit' 

 

Git의 기본 패턴

Pull-Commit-Push

원격 repo 와 로컬 repo 를 연결해서 내용을 반영하고 싶을 땐 어떤 방법을 써야할까?
나의 정리: commit&push
수업자료 정리: 
로컬 repo 가 없고 원격 repo 에 있는 내용을 가져오고 싶을 때는 clone 한다.
원격 repo 와 로컬 repo 둘 다 있고 두 개를 연결하고 싶을 때는 로컬 repo 가 원격 repo를 tracking 하도록 설정한다.
원격 repo 와 로컬 repo 는 왜 따로 있을까?
나의 정리: 원격 repo를 중심으로 작업자들 각 컴퓨터에 있는 로컬 repo에서 각자 작업한 것을 공유하기 좋다.
수업자료 정리: 협업할 때, 혹은 여러 컴퓨터를 사용한다면 하나의 원격 repo 에 여러 로컬 repo 를 연결시킬 수 있다. 하나의 프로젝트를 동시에 작업하는게 가능해진다.
push 와 pull 의 개념을 원격 repo와 로컬 repo 를 포함해 그림으로 그려보세요.
나의 정리: 
       (pull)
원격 repo -> 로컬 repo

원격 repo <- 로컬 repo
       (push)
       수업자료 정리:

